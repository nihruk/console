openapi: '3.1.0'
info:
  title: IODA
  version: '0.0.0'
servers:
  - url: 'https://example.com'
    description: Live API
paths:
  '/center':
    get:
      description: Get a collection of NIHR centers.
      responses:
        '200':
          '$ref': '#/components/responses/200OKCenterCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/center/{centerId}':
    get:
      description: Get an NIHR center by its ID.
      responses:
        '200':
          '$ref': '#/components/responses/200OKCenter'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/centerId'
  '/program':
    get:
      description: Get a collection of research programs.
      responses:
        '200':
          '$ref': '#/components/responses/200OKProgramCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/program/{programId}':
    get:
      description: Get a research program by its ID.
      responses:
        '200':
          '$ref': '#/components/responses/200OKProgram'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/programId'
  '/award':
    get:
      description: Get a collection of awards.
      responses:
        '200':
          '$ref': '#/components/responses/200OKAwardCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/award/{awardId}':
    get:
      description: Get an award by its ID.
      responses:
        '200':
          '$ref': '#/components/responses/200OKAward'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/awardId'
  '/person':
    get:
      description: Get a collection of people.
      responses:
        '200':
          '$ref': '#/components/responses/200OKPersonCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/person/{personId}':
    get:
      description: Get a person by their ID.
      responses:
        '200':
          '$ref': '#/components/responses/200OKPerson'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/personId'
  '/institution':
    get:
      description: Get a collection of institutions.
      responses:
        '200':
          '$ref': '#/components/responses/200OKInstitutionCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
  '/institution/{institutionId}':
    get:
      description: Get an institution by its ID.
      responses:
        '200':
          '$ref': '#/components/responses/200OKInstitution'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    parameters:
      - '$ref': '#/components/parameters/institutionId'
  '/user':
    get:
      description: Get a collection of IODA users.
      responses:
        '200':
          '$ref': '#/components/responses/200OKUserCollection'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    post:
      description: Save a new IODA user.
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user'
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '401':
          '$ref': '#/components/responses/401Unauthorized'
        '403':
          '$ref': '#/components/responses/403Forbidden'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
  '/user/{userId}':
    get:
      description: Get a IODA user by their ID.
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
    patch:
      description: Update a IODA user by their ID.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              '$ref': 'https://json.schemastore.org/json-patch'
      responses:
        '200':
          '$ref': '#/components/responses/200OKUser'
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    delete:
      description: Delete a IODA user by their ID.
      responses:
        '200':
          description: The IODA user was successfully deleted.
        '400':
          '$ref': '#/components/responses/400BadRequest'
        '404':
          '$ref': '#/components/responses/404NotFound'
        '405':
          '$ref': '#/components/responses/405MethodNotAllowed'
        '406':
          '$ref': '#/components/responses/406NotAcceptable'
        '415':
          '$ref': '#/components/responses/415UnsupportedMediaType'
        '500':
          '$ref': '#/components/responses/500InternalServerError'
        '502':
          '$ref': '#/components/responses/502BadGateway'
        '503':
          '$ref': '#/components/responses/503ServiceUnavailable'
        '504':
          '$ref': '#/components/responses/504GatewayTimeout'
      security:
        - ioda: []
    parameters:
      - '$ref': '#/components/parameters/userId'
components:
  schemas:
    center:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/centerId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The center's human-readable name
        address:
          '$ref': '#/components/schemas/address'
      required:
        - id
        - name
      additionalProperties: false
    program:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/programId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The program's human-readable name
      required:
        - id
        - name
      additionalProperties: false
    award:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/awardId'
        start:
          name: Start date
          type: date
        end:
          name: End date
          type: date
        funding:
          name: The total NIHR funding granted to the award
          description: The granted funding in pence sterling.
          type: integer
          minimum: 1
        website:
          name: Website
          description: The URL to the award's own website
          type: string
          format: uri
      required:
        - id
      additionalProperties: false
    person:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/personId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The person's name
        orcid:
          '$ref': '#/components/schemas/orcid'
      required:
        - id
        - name
      additionalProperties: false
    institution:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/institutionId'
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: The institution's human-readable name
        address:
          '$ref': '#/components/schemas/address'
      required:
        - id
        - name
      additionalProperties: false
    user:
      type: object
      properties:
        id:
          '$ref': '#/components/schemas/userId'
        emailAddress:
          type: string
          format: email
          description: The user's email address for communication
      required:
        - id
        - emailAddress
      additionalProperties: false
    error:
      type: object
      properties:
        message:
          type: string
          minLength: 1
          maxLength: 255
          description: The human-readable error message.
        http:
          type: object
          properties:
            status:
              type: string
              pattern: '^\d\d\d$'
              description: The HTTP response status code.
            message:
              type: string
              minLength: 1
              maxLength: 255
              description: The HTTP response status message.
          required:
            - status
            - message
          additionalProperties: false
      required:
        - message
        - http
      additionalProperties: false
    centerId:
      name: NIHR center ID
      type: string
      minLength: 1
      maxLength: 255
    programId:
      name: Research program ID
      type: string
      minLength: 1
      maxLength: 255
    awardId:
      name: Award ID
      type: string
      minLength: 1
      maxLength: 255
    personId:
      name: Person ID
      type: string
      minLength: 1
      maxLength: 255
    institutionId:
      name: Research institution ID
      type: string
      minLength: 1
      maxLength: 255
    userId:
      name: IODA user ID
      '$ref': '#/components/schemas/uuidV4'
    uuidV4:
      description: A UUIDv4
      type: string
      pattern: '[0-9a-f]{8}\-[0-9a-f]{4}\-4[0-9a-f]{3}\-[89ab][0-9a-f]{3}\-[0-9a-f]{12}'
      readonly: true
    orcid:
      name: ORCID
      type: string
      pattern: '^https:\/\/orcid.org\/\d{4}-\d{4}-\d{4}-\d{4}$'
    coordinates:
      type: object
      properties:
        latitude:
          name: Latitude
          type: number
          description: A geographic coordinate in decimal degrees.
        longitude:
          name: Longitude
          type: number
          description: A geographic coordinate in decimal degrees.
      required:
        - latitude
        - longitude
      additionalProperties: false
    postcode:
      name: UK postcode
      type: string
      pattern: '^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$'
    address:
      name: Address
      type: object
      properties:
        line1:
          type: string
          minLength: 1
          maxLength: 255
        line2:
          type: string
          minLength: 1
          maxLength: 255
        line3:
          type: string
          minLength: 1
          maxLength: 255
        town:
          type: string
          minLength: 1
          maxLength: 255
        postcode:
          '$ref': '#/components/schemas/postcode'
        coordinates:
          '$ref': '#/components/schemas/coordinates'
      required:
        - line1
        - town
        - postcode
      additionalProperties: false
  parameters:
    centerId:
      name: NIHR center ID
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/centerId'
    programId:
      name: Research program ID
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/programId'
    awardId:
      name: Award ID
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/awardId'
    personId:
      name: Person ID
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/personId'
    institutionId:
      name: Research institution ID
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/institutionId'
    userId:
      name: IODA user ID
      in: path
      required: true
      schema:
        '$ref': '#/components/schemas/userId'
  responses:
    200OKCenter:
      description: An NIHR center
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/center'
    200OKCenterCollection:
      description: A collection of NIHR centers
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/center'
    200OKProgram:
      description: A research program
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/program'
    200OKProgramCollection:
      description: A collection of research programs
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/program'
    200OKAward:
      description: An award
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/award'
    200OKAwardCollection:
      description: A collection of awards
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/award'
    200OKPerson:
      description: A person
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/person'
    200OKPersonCollection:
      description: A collection of people
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/person'
    200OKInstitution:
      description: A research institution
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/institution'
    200OKInstitutionCollection:
      description: A collection of research institutions
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/institution'
    200OKUser:
      description: A IODA user
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/user'
    200OKUserCollection:
      description: A collection of IODA users
      content:
        application/json:
          schema:
            type: array
            items:
              '$ref': '#/components/schemas/user'
    400BadRequest:
      description: An HTTP 400 Bad Request error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    401Unauthorized:
      description: An HTTP 401 Unauthorized error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    403Forbidden:
      description: An HTTP 403 Forbidden error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    404NotFound:
      description: An HTTP 404 Not Found error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    405MethodNotAllowed:
      description: An HTTP 405 Method Not Allowed error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    406NotAcceptable:
      description: An HTTP 406 Not Acceptable error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    415UnsupportedMediaType:
      description: An HTTP 415 Unsupported Media Type error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    500InternalServerError:
      description: An HTTP 500 Internal Server Error error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    502BadGateway:
      description: An HTTP 502 Bad Gateway error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    503ServiceUnavailable:
      description: An HTTP 503 Service Unavailable error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
    504GatewayTimeout:
      description: An HTTP 504 Gateway Timeout error.
      content:
        application/json:
          schema:
            '$ref': '#/components/schemas/error'
  securitySchemes:
    ioda:
      type: http
      scheme: Bearer
      description: A IODA API token generated through your IODA user account.
