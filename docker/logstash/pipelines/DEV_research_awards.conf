input { 
	jdbc { 
		jdbc_driver_library => "/usr/share/logstash/drv/mssql-jdbc-12.2.0.jre8.jar"
		jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
		jdbc_connection_string => "jdbc:sqlserver://${DB_SERVER1};databaseName=${DB_NAME3};encrypt=true;trustServerCertificate=true"
		jdbc_user => "${SQL_USER2}"
		jdbc_password => "${SQL_PASSWORD2}"
		statement_filepath => "/usr/share/logstash/bin/conf.d/data/awards.sql"
	}
}

filter {
    jdbc_streaming {
		jdbc_driver_library => "/usr/share/logstash/drv/mssql-jdbc-12.2.0.jre8.jar"
		jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
		jdbc_connection_string => "jdbc:sqlserver://${DB_SERVER2};databaseName=${DB_NAME2};encrypt=true;trustServerCertificate=true"
		jdbc_user => "${SQL_USER1}"
		jdbc_password => "${SQL_PASSWORD1}"
        statement => "${SQL_AWARD_PERSONS}"
        parameters => {"identifier" => "identifier"}
        target => "persons"
    }
    #mutate {
    	#	remove_field => ["p_stream"]
    	#}
}

filter {
    ruby {
        path => "/usr/share/logstash/bin/conf.d/data/awards_filter.rb"
    }

	#mutate {
	#	remove_field => ["p_stream"]
	#}
}

output {
  elasticsearch {
	index => "research_awards_v7"
	document_id => "%{identifier}"
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    cacert => "certs/ca/ca.crt"
  }
}
